from pwn import *

binary = "./"
context.binary = binary
context.log_level = "debug"

e = ELF(binary)
r = ROP(e)

libc = "./"
libc = ELF(libc)

if len(sys.argv) > 1:
    if sys.argv[1] == "r":
        user = ""
        pw = ""
        host= ""
        directory = ""

        sh = ssh(host, user, pw)
        sh.set_working_directory(directory)
        io = sh.process(binary)
    elif sys.argv[1] == "s":
        host = ""
        port = 0
        io = remote(host, port)
    elif sys.argv[1] == "l":
        io = process(binary)
    elif sys.argv[1] == "d":
        execute = """
        c
        """.format(hex(e.symbols["main"] if "main" in e.symbols.keys() else e.entrypoint))
        io = gdb.debug([binary], gdbscript = execute)
else:
    io = process([binary])
    io = process([binary], env = {"LD_PRELOAD": libc})

def fms(src, dst, offset) -> str:
    writes = {src: dst}
    # writes = {: , : }
    return fmtstr_payload(offset, writes)

log.info("Pwning")

io.interactive()
